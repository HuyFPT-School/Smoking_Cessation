package com.example.demo.service.AdminServicePackage.dashboard;

import com.example.demo.DTO.AdminDTO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;


@Service
public class AdminDashboardService {

    // ===================== INJECTION =====================

    @Autowired private UserGrowthService userGrowthService;
    @Autowired private SuccessRateService successRateService;
    @Autowired private UserProgressDistributionService userProgressDistributionService;  

    // ===================== MAIN METHOD =====================

    /**
     * ‚úÖ T√≠nh to√°n v√† t·ªïng h·ª£p d·ªØ li·ªáu cho dashboard admin
     * üìå G·ªìm: s·ªë user, growth rate, t·ªâ l·ªá th√†nh c√¥ng, ph√¢n b·ªë ti·∫øn tr√¨nh, v.v...
     */
    public AdminDTO getTotalUserStats() {
        AdminDTO dto = new AdminDTO();  // ƒê·ªëi t∆∞·ª£ng DTO ch·ª©a d·ªØ li·ªáu tr·∫£ v·ªÅ cho dashboard

        // 1Ô∏è‚É£ T·ªïng s·ªë ng∆∞·ªùi d√πng
        dto.setTotalUsers(userGrowthService.countTotalUsers());

        // 2Ô∏è‚É£ T√≠nh t·ªëc ƒë·ªô tƒÉng tr∆∞·ªüng (growth rate %)
        double growth = userGrowthService.calculateGrowthRate();
        dto.setGrowthRate(Math.round(growth * 10.0) / 10.0);  // L√†m tr√≤n ƒë·∫øn 1 ch·ªØ s·ªë th·∫≠p ph√¢n

        // 3Ô∏è‚É£ T√≠nh t·ªâ l·ªá th√†nh c√¥ng (% s·ªë ng∆∞·ªùi b·ªè thu·ªëc th√†nh c√¥ng), ƒë∆∞·ª£c t√≠nh n·∫øu ho√†n th√†nh h·∫øt c√°c m·ªëc reward ƒë·ªÅ ra
        double successRate = successRateService.calculateSuccessRate();
        dto.setSuccessRate(Math.round(successRate * 10.0) / 10.0);  // L√†m tr√≤n ƒë·∫øn 1 ch·ªØ s·ªë th·∫≠p ph√¢n

        // 4Ô∏è‚É£ S·ªë l∆∞·ª£ng user m·ªõi trong th√°ng hi·ªán t·∫°i
        dto.setNewUsersThisMonth(userGrowthService.getUsersThisMonth());

        // 5Ô∏è‚É£ T·ªâ l·ªá t·ªïng th·ªÉ ng∆∞·ªùi ƒëang kh√¥ng h√∫t thu·ªëc (overall)
        dto.setOverallSmokeFreeRate(successRateService.calculateOverallSmokeFreeRate());

        // 6Ô∏è‚É£ T·ªâ l·ªá ng∆∞·ªùi kh√¥ng h√∫t thu·ªëc trong th√°ng tr∆∞·ªõc
        dto.setLastMonthSmokeFreeRate(successRateService.calculateLastMonthSmokeFreeRate());

        // 7Ô∏è‚É£ Trung b√¨nh s·ªë ng√†y cai thu·ªëc c·ªßa ng∆∞·ªùi d√πng ƒë√£ b·ªè th√†nh c√¥ng
        dto.setAverageDailyUsers(successRateService.calculateAvgDaysQuitPerSuccessfulUser());

        // 8Ô∏è‚É£ Ph√¢n b·ªë ng∆∞·ªùi d√πng theo ti·∫øn tr√¨nh (1 tu·∫ßn, 1 th√°ng, 3 th√°ng tr·ªü l√™n)
        var distribution = userProgressDistributionService.getProgressDistribution();
        dto.setFirstWeekPercent(distribution.firstWeekPercent());
        dto.setFirstMonthPercent(distribution.firstMonthPercent());
        dto.setThreeMonthsOrMorePercent(distribution.threeMonthsOrMorePercent());

        return dto;
    }
}
