package com.example.demo.Config;

import com.google.auth.oauth2.GoogleCredentials;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import jakarta.annotation.PostConstruct;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.ClassPathResource;

import java.io.IOException;
import java.io.InputStream;

/**
 * L·ªõp c·∫•u h√¨nh ƒë·ªÉ kh·ªüi t·∫°o Firebase Admin SDK cho ·ª©ng d·ª•ng Spring Boot.
 * 
 * Khi ·ª©ng d·ª•ng kh·ªüi ƒë·ªông, l·ªõp n√†y s·∫Ω t·ª± ƒë·ªông ch·∫°y v√† thi·∫øt l·∫≠p k·∫øt n·ªëi v·ªõi Firebase
 * s·ª≠ d·ª•ng file kh√≥a d·ªãch v·ª• (serviceAccountKey.json).
 */

@Configuration // ƒê√°nh d·∫•u ƒë√¢y l√† m·ªôt l·ªõp c·∫•u h√¨nh Spring
public class FirebaseConfig {

    /**
     * Ph∆∞∆°ng th·ª©c n√†y s·∫Ω t·ª± ƒë·ªông ƒë∆∞·ª£c g·ªçi sau khi Spring kh·ªüi t·∫°o bean n√†y.
     * N√≥ d√πng ƒë·ªÉ kh·ªüi t·∫°o Firebase Admin SDK n·∫øu ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o tr∆∞·ªõc ƒë√≥.
     */

    @PostConstruct // Annotation gi√∫p t·ª± ƒë·ªông ch·∫°y h√†m n√†y sau khi bean ƒë∆∞·ª£c t·∫°o
    public void initializeFirebase() {
        try {
            if (FirebaseApp.getApps().isEmpty()) {
                System.out.println("üîÑ Initializing Firebase Admin SDK...");

                InputStream serviceAccount = null;
                String serviceAccountJson = System.getenv("FIREBASE_SERVICE_ACCOUNT");
                if (serviceAccountJson != null && !serviceAccountJson.isEmpty()) {
                    System.out.println("‚ÑπÔ∏è Using service account from environment variable FIREBASE_SERVICE_ACCOUNT");
                    serviceAccount = new java.io.ByteArrayInputStream(serviceAccountJson.getBytes(java.nio.charset.StandardCharsets.UTF_8));
                } else {
                    System.out.println("‚ÑπÔ∏è Using service account from classpath resource serviceAccountKey.json");
                    serviceAccount = new ClassPathResource("serviceAccountKey.json").getInputStream();
                }

                FirebaseOptions options = FirebaseOptions.builder()
                        .setCredentials(GoogleCredentials.fromStream(serviceAccount))
                        .setProjectId("my-project-caaa7")
                        .build();

                FirebaseApp.initializeApp(options);
                System.out.println("‚úÖ Firebase Admin SDK initialized successfully");

                // Ki·ªÉm tra k·∫øt n·ªëi v·ªõi Firebase b·∫±ng c√°ch l·∫•y danh s√°ch user (gi·ªõi h·∫°n 1 user)
                try {
                    Thread.sleep(1000);
                    com.google.firebase.auth.FirebaseAuth.getInstance().listUsers(null, 1);
                    System.out.println("‚úÖ Firebase connection test passed");
                } catch (Exception e) {
                    System.err.println("‚ùå Firebase connection test failed: " + e.getMessage());
                    if (e.getMessage() != null && e.getMessage().contains("Invalid JWT Signature")) {
                        System.err.println("üí° Hint: Try running 'w32tm /resync' as Administrator");
                    }
                }
            } else {
                System.out.println("‚úÖ Firebase Admin SDK already initialized");
            }
        } catch (IOException e) {
            System.err.println("‚ùå Firebase initialization failed: " + e.getMessage());
            System.err.println("‚ùå Make sure serviceAccountKey.json exists and is valid, or the FIREBASE_SERVICE_ACCOUNT env variable is set");
            e.printStackTrace();
        } catch (Exception e) {
            System.err.println("‚ùå Unexpected Firebase initialization error: " + e.getMessage());
            e.printStackTrace();
        }
    }
}